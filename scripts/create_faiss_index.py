#stockage FAISS
import os
import faiss
import numpy as np

# D√©finition des chemins
EMBEDDINGS_FILE = "output/embeddings.npy"
INDEX_FILE = "output/faiss_index.bin"
OUTPUT_DIR = "output/"

# V√©rification et cr√©ation du dossier de sortie
os.makedirs(OUTPUT_DIR, exist_ok=True)

# V√©rification que le fichier embeddings existe
if not os.path.exists(EMBEDDINGS_FILE):
    print(f"‚ùå Erreur : Le fichier '{EMBEDDINGS_FILE}' n'existe pas. Ex√©cutez d'abord 'generate_embeddings.py'.")
    exit(1)

# Chargement des embeddings
try:
    embeddings = np.load(EMBEDDINGS_FILE)
    if embeddings.size == 0:
        print("‚ùå Erreur : Le fichier d'embeddings est vide.")
        exit(1)
except Exception as e:
    print(f"‚ùå Erreur lors du chargement des embeddings : {e}")
    exit(1)

# R√©cup√©ration de la dimension des vecteurs
embedding_dim = embeddings.shape[1]
print(f"üìä Dimension des embeddings : {embedding_dim}")

# Cr√©ation de l'index FAISS
print("üîÑ Cr√©ation de l'index FAISS...")
index = faiss.IndexFlatL2(embedding_dim)  # Index L2 pour la recherche de similarit√©

# Ajout des embeddings √† l'index
index.add(embeddings)
print(f"‚úÖ {index.ntotal} embeddings ajout√©s √† l'index FAISS.")

# Sauvegarde de l'index
faiss.write_index(index, INDEX_FILE)
print(f"üíæ Index FAISS sauvegard√© dans '{INDEX_FILE}'.")


